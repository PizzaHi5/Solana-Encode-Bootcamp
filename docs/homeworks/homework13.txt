Homework 13
1. Use the Anchor command line tools to create a new project.
. Adapt the default program as follows
1. In an account we want to store a balance of type u64
. On initialisation, this balance should be set to 100
. Write a test to check that the balance was initialised correctly.
-   I had a very difficult time getting a new anchor repo setup with 'anchor init hw13'.
    Somehow the way I modified the repo messed up how it works. I learned that changing 
    edition 2021 to rust-version 1.70.0 will not work because they do not mean the same
    thing. Changing the anchor-lang to 0.28.0 made it compile much faster however always
    compiled with an error. I am glad I got it working! 6/16/23
-   Tried setting up reading the setdata from the contract. Learned about 2 different
    methods. One involving calling a getting function and another pulling the contract
    data in and referencing it that way. Ran into a new error: 
        Error: Invalid arguments: dataAccount not provided.
    This is taking time to solve. 
-   I have worked hard trying to get a valid transaction to occur. Put a bunch of work
    into learning how to sign my own transaction with my personal private keypair instead
    of using the provided programAddress. This did not solve my problem. I am bringing over
    what I was able to accomplish. Moving on to the lottery program. 

Lottery Program
From the Bootcamp repo, anchor examples
https://github.com/ExtropyIO/SolanaBootcamp/tree/main/examples_anchor
1. Modify the lottery program so that the payout is only 90% of the total deposits.
. Add a function that allows lottery admin to withdraw funds after the winner is picked.
-   This program was completed and used in the final project! We took the lottery program
    and repurposed it for incorporating EigenLayer restaking ticket system into. 
    Reference the final project for this homework!
